{"ast":null,"code":"var _jsxFileName = \"/Users/sneha/Desktop/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jwtDecode } from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  const [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwtDecode(localStorage.getItem(\"authTokens\")) : null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const loginUser = async (email, password) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      navigate(\"/\");\n      Swal.fire({\n        title: \"Login Successful\",\n        icon: \"success\",\n        toast: true,\n        timer: 6000,\n        position: 'top-right',\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    } else {\n      Swal.fire({\n        title: \"Username or password does not exist\",\n        icon: \"error\",\n        toast: true,\n        timer: 6000,\n        position: 'top-right',\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    }\n  };\n  const registerUser = async (email, username, password, password2) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/register/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        username,\n        password,\n        password2\n      })\n    });\n    if (response.status === 201) {\n      navigate(\"/login\");\n      Swal.fire({\n        title: \"Registration Successful, Login Now\",\n        icon: \"success\",\n        toast: true,\n        timer: 6000,\n        position: 'top-right',\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    } else {\n      Swal.fire({\n        title: \"An Error Occurred \" + response.status,\n        icon: \"error\",\n        toast: true,\n        timer: 6000,\n        position: 'top-right',\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    }\n  };\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    navigate(\"/login\");\n    Swal.fire({\n      title: \"You have been logged out...\",\n      icon: \"success\",\n      toast: true,\n      timer: 6000,\n      position: 'top-right',\n      timerProgressBar: true,\n      showConfirmButton: false\n    });\n  };\n  const contextData = {\n    user,\n    setUser,\n    authTokens,\n    setAuthTokens,\n    registerUser,\n    loginUser,\n    logoutUser\n  };\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwtDecode(authTokens.access));\n    }\n    setLoading(false);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"edCz9afOEIQpdcJ6/xf5X7/Hgco=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwtDecode","useNavigate","Swal","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","navigate","loginUser","email","password","response","fetch","method","headers","body","stringify","data","json","status","access","setItem","fire","title","icon","toast","timer","position","timerProgressBar","showConfirmButton","registerUser","username","password2","logoutUser","removeItem","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sneha/Desktop/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\"\nimport { jwtDecode } from 'jwt-decode'\nimport { useNavigate } from 'react-router-dom'\nimport Swal from 'sweetalert2'\n\nconst AuthContext = createContext()\n\nexport default AuthContext\n\nexport const AuthProvider = ({ children }) => {\n    const [authTokens, setAuthTokens] = useState(() =>\n        localStorage.getItem(\"authTokens\")\n            ? JSON.parse(localStorage.getItem(\"authTokens\"))\n            : null\n    )\n\n    const [user, setUser] = useState(() => \n        localStorage.getItem(\"authTokens\")\n            ? jwtDecode(localStorage.getItem(\"authTokens\"))\n            : null\n    )\n\n    const [loading, setLoading] = useState(true)\n    const navigate = useNavigate()\n\n    const loginUser = async (email, password) => {\n        const response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email, password\n            })\n        })\n        const data = await response.json()\n\n        if (response.status === 200) {\n            setAuthTokens(data)\n            setUser(jwtDecode(data.access))\n            localStorage.setItem(\"authTokens\", JSON.stringify(data))\n            navigate(\"/\")\n            Swal.fire({\n                title: \"Login Successful\",\n                icon: \"success\",\n                toast: true,\n                timer: 6000,\n                position: 'top-right',\n                timerProgressBar: true,\n                showConfirmButton: false,\n            })\n        } else {\n            Swal.fire({\n                title: \"Username or password does not exist\",\n                icon: \"error\",\n                toast: true,\n                timer: 6000,\n                position: 'top-right',\n                timerProgressBar: true,\n                showConfirmButton: false,\n            })\n        }\n    }\n\n    const registerUser = async (email, username, password, password2) => {\n        const response = await fetch(\"http://127.0.0.1:8000/api/register/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email, username, password, password2\n            })\n        })\n        if (response.status === 201) {\n            navigate(\"/login\")\n            Swal.fire({\n                title: \"Registration Successful, Login Now\",\n                icon: \"success\",\n                toast: true,\n                timer: 6000,\n                position: 'top-right',\n                timerProgressBar: true,\n                showConfirmButton: false,\n            })\n        } else {\n            Swal.fire({\n                title: \"An Error Occurred \" + response.status,\n                icon: \"error\",\n                toast: true,\n                timer: 6000,\n                position: 'top-right',\n                timerProgressBar: true,\n                showConfirmButton: false,\n            })\n        }\n    }\n\n    const logoutUser = () => {\n        setAuthTokens(null)\n        setUser(null)\n        localStorage.removeItem(\"authTokens\")\n        navigate(\"/login\")\n        Swal.fire({\n            title: \"You have been logged out...\",\n            icon: \"success\",\n            toast: true,\n            timer: 6000,\n            position: 'top-right',\n            timerProgressBar: true,\n            showConfirmButton: false,\n        })\n    }\n\n    const contextData = {\n        user,\n        setUser,\n        authTokens,\n        setAuthTokens,\n        registerUser,\n        loginUser,\n        logoutUser,\n    }\n\n    useEffect(() => {\n        if (authTokens) {\n            setUser(jwtDecode(authTokens.access))\n        }\n        setLoading(false)\n    }, [authTokens, loading])\n\n    return (\n        <AuthContext.Provider value={contextData}>\n            {loading ? null : children}\n        </AuthContext.Provider>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}